# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.source.js':
  'log':
    prefix: 'log'
    body: 'console.log($1);'
  'Arrow function':
    prefix: '=>'
    body: '($1) => {\n  $2\n}'
  'Promise':
    prefix: 'Promise'
    body: 'new Promise((resolve, reject) => {\n  $1\n});'
  'then':
    prefix: '.then'
    body: '.then(($1) => {\n  $2\n})${3:;}'
  'catch':
    prefix: '.catch'
    body: '.catch((${1:error}) => {\n  $2\n})${3:;}'
  'forEach':
    prefix: '.for'
    body: '.forEach((${1:item}) => {\n  $2\n})${3:;}'
  'map':
    prefix: '.map'
    body: '.map((${1:item}) => {\n  $2\n})${3:;}'
  'filter':
    prefix: '.filter'
    body: '.filter((${1:item}) => {\n  $2\n})${3:;}'
  'this':
    prefix: '@'
    body: 'this.'
  'require':
    prefix: 'req'
    body: "const $1 = require('$1');"
  'it':
    prefix: 'it'
    body: '''
it('${1:should $2}', () => {
  ${3:// code}
});
'''
  'describe':
    prefix: 'desc'
    body: '''
describe('${1:something}', () => {
  it('${2:should $3}', () => {
    ${4:// code}
  });
});
'''
